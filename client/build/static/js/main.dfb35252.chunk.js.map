{"version":3,"sources":["Firebase.js","context/AuthContext.js","components/base/HeaderLogo.png","components/base/Header.js","components/p3/Room.js","components/base/Footer.js","components/p1/components/Login.js","components/p1/components/SignUp.js","components/p1/components/Forget.js","Socket.js","components/p2/Dashboard.js","components/p3/UserCard.js","components/p4/UserColorDisplay.js","components/p4/UserColors.js","components/p4/Problem.js","components/p4/Timer.js","components/p4/Page4.js","components/p4/ProblemHead.js","components/base/Page404.js","components/base/Spinner.js","components/ProtectedRoute.js","components/AntiProtectedRoute.js","components/p4/Standings.js","App.js","index.js"],"names":["dotenv","config","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","googleProvider","GoogleAuthProvider","useAuth","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","onAuthStateChanged","value","signUp","email","password","createUserWithEmailAndPassword","logIn","signInWithEmailAndPassword","logOut","signOut","signInWithGoogle","signInWithPopup","Provider","Header","admin","error","setError","history","useHistory","handleLogOut","a","window","confirm","push","message","className","to","src","logo","alt","style","maxWidth","height","role","onClick","Footer","Date","getFullYear","href","target","rel","Login","setEmail","setPassword","handleSubmit","e","preventDefault","handleGoogle","id","type","required","onChange","disabled","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","current","axios","post","then","res","catch","err","console","log","ref","Forget","randomId","require","socket","io","Dashboard","setIntervalVar","sessionStorage","getItem","size","room","setRoom","joined","setJoined","handle","setHandle","firstName","setFirstName","setMessage","messageHandle","setMessageHandle","handleRef","roomCodeRef","setInterval","username","setItem","data","clearInterval","roomValidate","roomCode","flag","userid","roomid","handleJoin","on","roomData","params","placeholder","userInfoUrl","get","result","handleValidate","prevState","defaultValue","roomsize","joiningData","refresh","create","emit","handleCreate","UserCard","props","userId","userReady","isReady","currentUser","imageURL","setimageURL","titlePhoto","buttonSet","remove","ready","width","Room","useLocation","pathname","split","pop","definedColors","users","setRoomData","problems","lrating","urating","problemData","setProblemData","duration","setDuration","roomSize","replace","JSON","stringify","removeData","problemsLoading","setProblemsLoading","colorMap","readyData","min","navigator","clipboard","writeText","max","step","paddingRight","Math","floor","parseInt","problemInt","lrangeInt","urangeInt","i","problemsArray","arraySize","length","taken","Map","idx","random","problemObj","rating","forEach","endTime","getTime","map","UserColorDisplay","col","UserColors","Object","keys","key","Problem","problem","index","problemName","name","problemRating","problemURL","contestId","rowBgColor","setRowBgColor","userSolved","problemIndex","scope","textDecoration","Timer","returnTime","hrs","mins","secs","setTime","currentTime","delta","abs","timerId","ProblemHead","fetchData","statusUrl","currentProblem","verdict","some","findProblemArray","entries","temp","position","top","right","zIndex","Page4","Page404","Spinner","marginTop","ProtectedRoute","Component","component","rest","render","Comp","AntiProtectedRoute","Standings","useParams","usersToPoints","setUsersToPoints","roomDatum","newUsersToPoints","entry","sort","App","stored_roomid","stored_userid","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfb35252.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nvar firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyA8pIPwLzEO_Kfwgx14FD2JnfbtP1lS4EQ\",\r\n   \r\n    authDomain: \"cfknockout.firebaseapp.com\",\r\n   \r\n    databaseURL: \"https://cfknockout-default-rtdb.firebaseio.com\",\r\n   \r\n    projectId: \"cfknockout\",\r\n   \r\n    storageBucket: \"cfknockout.appspot.com\",\r\n   \r\n    messagingSenderId: \"995027400627\",\r\n   \r\n    appId: \"1:995027400627:web:39e34c517686fa012dfdc6\"\r\n   \r\n   };\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = app.auth();\r\nexport default app;","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { auth } from \"../Firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    \r\n    const [user, setUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signUp(email, password){\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logIn(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function signInWithGoogle() {\r\n        return auth.signInWithPopup(googleProvider);\r\n    }\r\n\r\n    function logOut() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unmount = auth.onAuthStateChanged(user => { setUser(user); setLoading(false);})\r\n        return unmount;\r\n    } , [])\r\n    \r\n    let value = {\r\n        user,\r\n        signUp,\r\n        logIn,\r\n        logOut,\r\n        signInWithGoogle,\r\n        loading\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/HeaderLogo.cd52f6c0.png\";","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './Header.css'\r\nimport logo from './HeaderLogo.png'\r\n\r\nfunction Header() {\r\n    const [error, setError] = useState('');\r\n    const { user, logOut } = useAuth();\r\n    let history = useHistory();\r\n    \r\n    let handleLogOut = async () => {\r\n\r\n        if (window.confirm(\"Are you sure you want to logout ?\")) {\r\n            try {\r\n                await logOut();\r\n                history.push(\"/\");\r\n            } catch (err) {\r\n                setError(err.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    let logoStyle = {\r\n        maxWidth: '6vw',\r\n        height: '3vh'\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar d-flex fw-bold customBg1\">\r\n            <Link to=\"/dashboard\" className=\"headerLogo\">\r\n                <div className=\"d-flex align-items-center m-0 p-0\">\r\n                    <img src={logo} alt=\"\" className=\"img-fluid\" style={logoStyle}/>\r\n                    <div className=\"mx-2 d-inline\">\r\n                        <span className=\"timer-responsive\">CF</span>\r\n                        <span className=\"timer-responsive\">Knockout</span>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            {\r\n                (error) ? <div className=\"alert alert-danger\" role=\"alert\">{error}</div> : ''\r\n            }\r\n            <div className=\"ms-auto\">\r\n                {\r\n                    user ? <button className=\"btn btn-danger mx-3 text-responsive\" onClick={() => handleLogOut()} >LogOut</button> : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation  } from \"react-router-dom\";\r\nimport { socket } from \"../../Socket\";\r\n\r\nimport { UserCard } from \"./UserCard\";\r\nimport \"./Room.css\";\r\nvar admin;\r\n\r\nexport const Room = () => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    let locationPath = location.pathname;\r\n    var roomid = locationPath.split('/').pop();\r\n    let definedColors = [\"success\", \"warning\", \"info\", \"danger\", \"primary\" , \"dark\"];\r\n\r\n    const [roomData, setRoomData] = useState({ users: [] });\r\n    const [problemData, setProblemData] = useState({ problems:0 , lrating: 0 , urating: 0});\r\n    const [duration, setDuration] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.post(\"/api/checkRoomCode\", { roomCode: roomid })\r\n            .then(res => {\r\n                // console.log(roomid);\r\n                // console.log(res.data);\r\n                if (res.data.flag == true) {\r\n                    var userid = sessionStorage.getItem(\"userid\");\r\n                    var refresh = sessionStorage.getItem(\"refresh\");\r\n                    var roomSize = sessionStorage.getItem(\"roomsize\");\r\n                    var joiningData = {\r\n                        userid: userid,\r\n                        roomid: roomid,\r\n                        refresh: refresh,\r\n                        roomsize: roomSize,\r\n                    };\r\n\r\n                    socket.emit(\"join\", joiningData);\r\n                    if (refresh === 0) {\r\n                        sessionStorage.setItem(\"refresh\", 1);\r\n                    }\r\n                } else {\r\n                    history.replace(\"/invalid\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    },[]);\r\n\r\n    socket.on(\"updateRoomData\", (roomData) => {\r\n        sessionStorage.setItem(\"roomData\", JSON.stringify(roomData));\r\n        admin = roomData.users[0].userId;\r\n        setRoomData(roomData);\r\n    });\r\n\r\n    socket.on(\"leaveRoom\", () => {\r\n        history.replace(\"/dashboard\");\r\n    });\r\n\r\n    socket.on(\"startContest\", (roomid) => {\r\n        history.push({\r\n            pathname: `/round/${roomid}`,\r\n        });\r\n    });\r\n\r\n    const remove = (user) => {\r\n        let removeData = {\r\n            user,\r\n            roomid,\r\n        };\r\n        socket.emit(\"remove\", removeData);\r\n    };\r\n\r\n    const [problemsLoading, setProblemsLoading] = useState(true);\r\n    var problems = [];\r\n    var colorMap = {};\r\n\r\n    const validate = () => {\r\n        let endTime = new Date().getTime() + duration * 60 * 1000;\r\n        axios\r\n            .post(\"/api/round/duration\", { roomid: roomid, duration: endTime })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                socket.emit(\"startContest\", roomid);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    const generate = () => {\r\n        setProblemsLoading(true);\r\n        var problemInt = parseInt(problemData.problems);\r\n        var lrangeInt = parseInt(problemData.lrating);\r\n        var urangeInt = parseInt(problemData.urating);\r\n\r\n        problemInt = Math.min(problemInt, 30);\r\n        problemInt = Math.max(problemInt, 1);\r\n\r\n        lrangeInt = Math.max(lrangeInt, 800);\r\n        lrangeInt = Math.min(lrangeInt, 3500);\r\n        urangeInt = Math.max(urangeInt, 800);\r\n\r\n        urangeInt = Math.max(urangeInt, lrangeInt);\r\n        urangeInt = Math.min(urangeInt, 3500);\r\n\r\n        for (let i = 800; i <= 3500; i += 100) {\r\n            if (lrangeInt <= i) {\r\n                lrangeInt = i;\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 800; i <= 3500; i += 100) {\r\n            if (urangeInt <= i) {\r\n                urangeInt = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let problemApiURL = \"https://codeforces.com/api/problemset.problems?\";\r\n        let problemsArray = [];\r\n\r\n        axios\r\n            .get(problemApiURL)\r\n            .then((res) => {\r\n                let arraySize = res.data.result.problems.length;\r\n                let taken = new Map();\r\n\r\n                for (let i = 0; i < problemInt;) {\r\n                    let idx = Math.floor(Math.random() * arraySize);\r\n\r\n                    let problemObj = res.data.result.problems[idx];\r\n\r\n                    if (\r\n                        problemObj.rating &&\r\n                        problemObj.rating >= lrangeInt &&\r\n                        problemObj.rating <= urangeInt &&\r\n                        !taken[idx]\r\n                    ) {\r\n                        problemObj[\"userSolved\"] = \"\";\r\n                        problemsArray.push(problemObj);\r\n                        taken[idx] = true;\r\n                        i++;\r\n                    }\r\n                }\r\n                console.log(problemsArray);\r\n                roomData.users.forEach((user, idx) => {\r\n                    colorMap[user.userId] = definedColors[idx];\r\n                });\r\n                problems = problemsArray;\r\n\r\n                axios\r\n                    .post(\"/api/round/problems\", {\r\n                        roomid: roomid,\r\n                        problemsArray: problems,\r\n                        colorMap: colorMap,\r\n                    })\r\n                    .then((res) => { })\r\n                    .catch((err) => console.log(err));\r\n\r\n                setProblemsLoading(false);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    let ready = (user) => {\r\n        let readyData = {\r\n            user,\r\n            roomid,\r\n        };\r\n        socket.emit(\"ready\", readyData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"customBgRoom\">\r\n            {admin === sessionStorage.getItem(\"userid\") ? (\r\n                <div className=\"container d-grid\">\r\n                    <div className=\"row px-0\">\r\n                        <div className=\"col-7 px-0\">\r\n                            <div className=\"input-group mb-3 my-3\">\r\n                                <span className=\"input-group-text px-2 text-responsive fw-bold\">\r\n                                    Number of Problems\r\n                                </span>\r\n                                <input\r\n                                    required={true}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    className=\"form-control text-responsive\"\r\n                                    placeholder=\"Enter Number of problems\"\r\n                                    id=\"numberOfProblems\"\r\n                                    onChange={(e) =>\r\n                                        setProblemData((prevState) => ({\r\n                                            ...prevState,\r\n                                            problems: e.target.value,\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mx-0 col-5 px-0 mt-3 justify-content-center text-end\">\r\n                            <button\r\n                                className=\"btn btn-info btn-block text-responsive px-1\"\r\n                                onClick={() => navigator.clipboard.writeText(roomid)}\r\n                            >\r\n                                Room Code <i className=\"fas fa-copy\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7 px-0\">\r\n                            <div className=\"input-group\">\r\n                                <span className=\"input-group-text px-2 text-responsive fw-bold\">\r\n                                    Rating Range\r\n                                </span>\r\n                                <input\r\n                                    required={true}\r\n                                    type=\"number\"\r\n                                    min=\"800\"\r\n                                    max=\"3500\"\r\n                                    step=\"100\"\r\n                                    placeholder=\"Starting from\"\r\n                                    className=\"form-control text-responsive\"\r\n                                    id=\"startRating\"\r\n                                    onChange={(e) =>\r\n                                        setProblemData((prevState) => ({\r\n                                            ...prevState,\r\n                                            lrating: e.target.value,\r\n                                        }))\r\n                                    }\r\n                                />\r\n                                <input\r\n                                    required={true}\r\n                                    type=\"number\"\r\n                                    min=\"800\"\r\n                                    max=\"3500\"\r\n                                    step=\"100\"\r\n                                    placeholder=\"Ending at\"\r\n                                    className=\"form-control text-responsive\"\r\n                                    id=\"endRating\"\r\n                                    onChange={(e) =>\r\n                                        setProblemData((prevState) => ({\r\n                                            ...prevState,\r\n                                            urating: e.target.value,\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-5 text-end\" style={{ paddingRight: 0 }}>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text px-2 text-responsive fw-bold\">\r\n                                    Duration\r\n                                </span>\r\n                                <input\r\n                                    required={true}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    className=\"form-control text-responsive\"\r\n                                    placeholder=\"Duration in minutes\"\r\n                                    id=\"duration\"\r\n                                    onChange={(e) =>\r\n                                        setDuration(Math.floor(parseInt(e.target.value)))\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row my-3\">\r\n                        <div className=\"col px-0\">\r\n                            <button\r\n                                className=\"btn btn-primary btn-block text-responsive fw-bold m-auto text-responsive\"\r\n                                onClick={generate}\r\n                            >\r\n                                Generate Problems\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row text-center my-3\">\r\n                        <div className=\"col\">\r\n                            <button\r\n                                className=\"btn w-25 btn-success btn-block text-responsive fw-bold\"\r\n                                disabled={problemsLoading}\r\n                                onClick={validate}\r\n                            >\r\n                                {\" \"}\r\n                                Start Contest\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <div className=\"fluid-container d-flex justify-content-around align-content-around py-3 flex-wrap\">\r\n                {roomData.users\r\n                    ? roomData.users.map((user , idx) => {\r\n                        return (\r\n                            <UserCard\r\n                                user={user}\r\n                                admin={admin}\r\n                                remove={remove}\r\n                                ready={ready}\r\n                                key={idx}\r\n                            />\r\n                        );\r\n                    })\r\n                    : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <>\r\n            <footer className=\"d-flex container-fluid pos text-light bg-dark copyright px-sm-3 px-2\">\r\n                <span className=\"me-auto\">Copyright © {(new Date().getFullYear())}</span>\r\n                <div className=\"\">\r\n                    <div className=\"copyright-menu\">\r\n                        <ul className=\"p-0\">\r\n                            <li>\r\n                                <a href=\"https://github.com/SaketThota/CF-Knockout#readme\" target=\"_blank\" rel=\"noreferrer\">\r\n                                    How to use\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://github.com/SaketThota/CF-Knockout#readme\" target=\"_blank\" rel=\"noreferrer\">\r\n                                    Contact us\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Login.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../../context/AuthContext'\r\n\r\nexport const Login = () => {\r\n\tconst [ email, setEmail ] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    let history = useHistory();\r\n    const { logIn , signInWithGoogle } = useAuth();\r\n\r\n\tconst handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await logIn(email, password);\r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleGoogle = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await signInWithGoogle();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n\treturn (\r\n        <div className=\"px-4 p-sm-0 customBg\">\r\n            <div className=\"container-fluid d-grid\">\r\n\t\t\t\t<div className=\"row justify-content-center align-items-center p-0\">\r\n\t\t\t\t\t<div className=\"col-12 col-sm-6 col-md-5 form-container\" id=\"login-box\">\r\n                        <div className=\"m-0 p-1 border-bottom fs-4 text-light bg-dark\" id=\"text\">\r\n\t\t\t\t\t\t\tLogin to CFKnockout\r\n\t\t\t\t\t\t</div>\r\n                        <form id=\"forms\">\r\n                            {\r\n                                (error) ? <div className=\"alert alert-danger\" role=\"alert\">{error}</div> : ''   \r\n                                \r\n                            }\r\n\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<label className=\"form-label\">Email address</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<label className=\"form-label\">Password</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n                            <button disabled={loading} onClick={(e) => handleSubmit(e)} className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\t\tLogIn\r\n                            </button>\r\n                            <Link className=\"mx-2 btn btn-outline-primary\" to=\"/signup\">\r\n                                SignUp\r\n                            </Link>\r\n                            <div id=\"lineor\" className=\"my-2\">\r\n                                <div className=\"lines\"></div>\r\n                                <div><span>OR</span></div>\r\n                                <div className=\"lines\"></div>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-outline-danger btn-block w-100 text-responsive\" onClick={(e) => handleGoogle(e)} >Google</button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react'\r\nimport './Login.css'\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { useRef , useState } from 'react';\r\nimport { useAuth } from '../../../context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css'\r\n\r\nexport const SignUp = () => {\r\n    const history = useHistory();\r\n    let emailRef = useRef();\r\n    let passwordRef = useRef();\r\n    let passwordConfirmRef = useRef();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const { signUp } = useAuth();\r\n\r\n    let handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match');\r\n        }\r\n        \r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            await signUp(emailRef.current.value, passwordRef.current.value)\r\n            axios.post('/api/updateUser', { email: emailRef.current.value })\r\n                .then((res) => {\r\n                    history.push(\"/dashboard\");\r\n                })\r\n                .catch(err => console.log(err));\r\n        } catch(err){\r\n            setError(err.message)\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"px-4 p-sm-0 customBg\">\r\n            <div className=\"container-fluid d-grid\">\r\n                <section className=\"row justify-content-center align-items-center p-0\">\r\n                    <section className='col-12 col-sm-6 col-md-5 form-container ' id=\"login-box\">\r\n                        <div className=\"m-0 p-1 border-bottom bg-dark align-items-center text-light fs-4\" id=\"text\">Signup to CFKnockout</div>\r\n                        <form id=\"forms\">\r\n                            {\r\n                                (error) ? <div className=\"alert alert-danger\" role=\"alert\">{error}</div> : ''   \r\n                                \r\n                            }\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Email address</label>\r\n                                <input type=\"email\" className=\"form-control\" ref={emailRef}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" ref={passwordRef}/>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label\">Confirm Password</label>\r\n                                <input type=\"password\" className=\"form-control\" ref={passwordConfirmRef}/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={(e) => handleSubmit(e)} disabled={loading}>SignUp</button>\r\n                            <Link  className=\"mx-2 btn btn-outline-primary\" to=\"/login\">LogIn</Link>\r\n                        </form>\r\n                    </section>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Forget = () => {\r\n    return (\r\n        <>\r\n            I am Forget\r\n        </>\r\n    )\r\n}\r\n","import { io } from \"socket.io-client\";\r\nvar randomId = require('random-id');\r\n\r\nexport const socket = io(\"http://localhost:4000/\");\r\n\r\nexport const handleJoin = (userid, roomid, socket)=> {\r\n    sessionStorage.setItem(\"userid\",userid)\r\n    sessionStorage.setItem(\"roomid\", roomid);\r\n    sessionStorage.setItem(\"refresh\",0);\r\n}\r\n\r\nexport const handleCreate= (userid, roomsize, socket) => {\r\n    var roomid = randomId(12,\"aA0\");\r\n    sessionStorage.setItem(\"userid\",userid)\r\n    sessionStorage.setItem(\"roomid\", roomid);\r\n    sessionStorage.setItem(\"roomsize\", roomsize);\r\n    sessionStorage.setItem(\"refresh\",0);\r\n    var joiningData = {\r\n        userid: userid,\r\n        roomid: roomid,\r\n        refresh: 0,\r\n        roomsize: roomsize,\r\n        create: true\r\n    };\r\n    socket.emit(\"join\", joiningData);\r\n}","import React from 'react';\r\nimport \"./Dashboard.css\";\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    socket,\r\n    handleCreate,\r\n    handleJoin\r\n} from \"../../Socket\"\r\nimport { useAuth } from '../../context/AuthContext'\r\n\r\nexport const Dashboard = () => {\r\n    const history = useHistory();\r\n    var userid = sessionStorage.getItem(\"userid\")\r\n    const [room, setRoom] = useState({ id: \"\", size: \"\" });\r\n    const [joined, setJoined] = useState(false);\r\n    const [handle, setHandle] = useState('');\r\n    let [firstName, setFirstName] = useState('');\r\n    let [message, setMessage] = useState('');\r\n    let [messageHandle, setMessageHandle] = useState('');\r\n    let handleRef = useRef();\r\n    let { user } = useAuth();\r\n    let roomCodeRef = useRef();\r\n    var setIntervalVar;\r\n    var randomId = require('../../../node_modules/random-id');\r\n    \r\n    useEffect(() => {\r\n        setFirstName(randomId(20, 'aA0'));\r\n    }, [])\r\n\r\n    if (!handle) {\r\n        setIntervalVar = setInterval(intervalFunction, 1000);\r\n    }\r\n\r\n    function intervalFunction() {\r\n        if (user && !handle) {\r\n            axios.post('/api/findHandle', { username: user.email })\r\n                .then(res => {\r\n                    sessionStorage.setItem(\"userid\", res.data);\r\n                    setHandle(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n            myStopFunction();\r\n        }\r\n    }\r\n\r\n    function myStopFunction() {\r\n        clearInterval(setIntervalVar);\r\n    }\r\n\r\n    let handleValidate = (e) => {\r\n        let userInfoUrl = 'https://codeforces.com/api/user.info?handles=' + handleRef.current.value;\r\n        \r\n        axios.get(userInfoUrl)\r\n            .then(res => {\r\n                if (res.data.result[0].firstName === firstName) {\r\n                    axios.post('/api/updateUserHandle', { handle: handleRef.current.value, username: user.email })\r\n                        .then(res => {\r\n                            sessionStorage.setItem(\"userid\", handleRef.current.value);\r\n                            setHandle(handleRef.current.value);\r\n                            setMessageHandle('');\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                } else {\r\n                    setMessageHandle(\"Either you copied a wrong string or you entered a wrong handle\");\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    let handleUpdate = (e) => {\r\n        if (window.confirm(\"Are you sure you want to update Handle ?\")) {\r\n            axios.post('/api/deleteHandle', { username: user.email })\r\n                .then(res => {\r\n                    sessionStorage.setItem(\"userid\", '');\r\n                    setHandle('');\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    let roomValidate = () => {\r\n        axios.post('/api/checkRoomCode', { roomCode: roomCodeRef.current.value })\r\n            .then(res => {\r\n                setMessage(res.data.message);\r\n\r\n                if (res.data.flag===true) {\r\n                    userid = handle;\r\n                    handleJoin(userid, room.id, socket)\r\n                    setJoined(true);\r\n                    setMessage('');\r\n                } \r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    socket.on(\"roomCreated\", (roomData) => {\r\n        history.push(`/room/${room.id}`)\r\n    })\r\n\r\n    if (joined) {\r\n        history.push(`/room/${room.id}`, { params: room.id })\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-0 m-0 customBgDash\">\r\n            <div className='p-sm-4 px-1 bg-dark text-light w-100 d-grid'>\r\n                <div className=\"row mx-2\">\r\n                    <div className=\"col-md-2 col-sm-1 col-0\">\r\n                    </div>\r\n                    <div className=\"col-md-8 col-sm-10 col-12\">\r\n                        {\r\n                            handle ? null : <div className=\"alert alert-info p-1 my-1\" role=\"alert\">{'Paste this string in firstname field  - '}{<strong>{firstName}</strong>}</div>\r\n                        }\r\n                        {\r\n                            messageHandle ? <div className=\"alert alert-danger p-1 my-1\" role=\"alert\">{messageHandle}</div> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row m-2\">\r\n                    <div className=\"col-md-2 col-sm-1 col-0\">\r\n                    </div>\r\n                    <div className=\"col-md-6 col-sm-8 col-12 text-info\">\r\n                        <div className=\"input-group\">\r\n                            <span className=\"input-group-text\">Handle</span>\r\n                            <input type=\"text\" className=\"form-control\" ref={handleRef} placeholder={handle ? handle : 'Enter your CF Handle'} />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        handle ?\r\n                            <button className=\"col-md-2 col-sm-2 col-6 my-sm-0 my-2 mx-auto btn btn-success btn-block p-1\" onClick={(e) => handleUpdate(e)}>Update</button>\r\n                            :\r\n                            <button className=\"col-md-2 col-sm-2 col-6 my-sm-0 my-2 mx-auto btn btn-success btn-block p-1\" onClick={(e) => handleValidate(e)}>Validate</button>\r\n                    }\r\n                    <div className=\"col-md-2 col-sm-1 col-0\"></div>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                <div className=\"p-sm-5 p-4 container-fluid border w-50 justify-content-center my-md-5 my-3 shadow mb-5 rounded bg-light\">\r\n                    <div className=\"row py-2\">\r\n                        <div className=\"col-md-7 col-sm-12 px-0\">\r\n                            <div className=\"dropdown h-100\">\r\n                                <select className=\"form-select\" aria-label=\"Default select example\" onChange={(e) => {\r\n                                    setRoom(prevState => ({ ...prevState, [\"size\"]: e.target.value }))\r\n                                }}>\r\n                                    <option defaultValue value=\"2\">Room Size</option>\r\n                                    <option value=\"2\">Two</option>\r\n                                    <option value=\"3\">Three</option>\r\n                                    <option value=\"3\">Four</option>\r\n                                    <option value=\"3\">Five</option>\r\n                                    <option value=\"6\">Six</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-1 col-sm-0\"></div>\r\n                        <div className=\"col-md-4 col-sm-12 px-0 mx-sm-auto my-md-0 my-2\">\r\n                            <button className=\"w-100 btn btn-primary\" onClick={ () => {\r\n                                userid = handle;\r\n                                handleCreate(userid, room.size, socket)\r\n                                room.id = sessionStorage.getItem(\"roomid\");\r\n                            }\r\n                            } disabled={handle==='' ? true : false}>Create A Room</button>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"lineor\">\r\n                        <div className=\"lines\"></div>\r\n                        <div><span>OR</span></div>\r\n                        <div className=\"lines\"></div>\r\n                    </div>\r\n                    <div className=\"row px-0 py-2\">\r\n                        <div className=\"col-md-7 col-sm-12 px-0\">\r\n                            <input type=\"text\" className=\"form-control\" onChange={(e) => {\r\n                                setRoom(prevState => ({\r\n                                    ...prevState,\r\n                                    [\"id\"]: e.target.value\r\n                                }\r\n                                ))\r\n                            }\r\n                            } ref={roomCodeRef}/>\r\n                        </div>\r\n                        <div className=\"col-md-1 col-sm-0\"></div>\r\n                        <div className=\"col-md-4 col-sm-12 px-0 mx-sm-auto my-md-0 my-2\">\r\n                            <button className=\"w-100 btn btn-danger\"  onClick={() => {\r\n                                roomValidate();\r\n                            }\r\n                            } disabled={handle==='' ? true : false}>Join A Room</button>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        message ? <div className=\"alert alert-danger row p-1 px-2 my-0 mt-1\" role=\"alert\"> {message} </div> : null\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport './Room.css'\r\n\r\nconst axios = require('axios');\r\n\r\nexport const UserCard = (props) => {\r\n    var user = props.user.userId;\r\n    var admin = props.admin;\r\n    var userReady = props.user.isReady;\r\n    var currentUser = sessionStorage.getItem(\"userid\");\r\n\r\n    const [imageURL, setimageURL] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get('https://codeforces.com/api/user.info?handles=' + user)\r\n            .then(res => {\r\n                setimageURL(res.data.result[0].titlePhoto)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    var buttonSet = null;\r\n\r\n    if (admin === currentUser) {\r\n        if (currentUser === user) {\r\n            buttonSet = <button className=\"btn btn-danger text-responsive\" onClick={() => props.remove(props.user)}>Leave</button>\r\n        }\r\n        else {\r\n            buttonSet = <button className=\"btn btn-danger text-responsive\" onClick={() => props.remove(props.user)}>Remove</button>\r\n        }\r\n    }\r\n    else {\r\n        if (currentUser === user) {\r\n            buttonSet = <button className=\"btn btn-success text-responsive\" onClick={(e) => {\r\n                e.target.disabled = true;\r\n                props.ready(props.user);\r\n            }}>Ready</button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"card my-sm-2 my-1 p-sm-2 p-1 mx-3\"}>\r\n                <img src={imageURL} className=\"img-thumbnail mx-auto my-2\" alt=\"Loading Profile Image\" style={{ height: '9vw', width: '9vw' }} />\r\n                <div className=\"mx-auto text-center\">\r\n                    <h5 className={\"text-responsive card-title \" + (userReady ? \"text-success\" : \"text-danger\")} >{user}</h5>\r\n                    {buttonSet}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import './UserColors.css'\r\n\r\nexport const UserColorDisplay = (props) => {\r\n    return (\r\n        <>\r\n            <span className={\"p-2 flex-fill text-responsive bg-\" + props.col + props.col==='dark' ? \" text-light\" : \" text-dark\"}>\r\n                {props.user}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { UserColorDisplay } from \"./UserColorDisplay\";\r\nimport './UserColors.css'\r\n\r\nexport const UserColors = ({ colorMap }) => {\r\n    return (\r\n        <div className=\"p-0 m-0 pt-3\">\r\n            <div className=\"container w-50 p-2 mb-3 d-flex py-3 flex-wrap text-center border border-black rounded align-items-center text-light\">\r\n                {\r\n                    Object.keys(colorMap).map((key, idx) => {\r\n                        return <UserColorDisplay user={key} col={colorMap[key]} key={idx}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport {useEffect , useState} from 'react'\r\nimport './UserColors.css'\r\nimport {socket} from \"../../Socket\"\r\n\r\nexport function Problem({ problem, index , colorMap}) {\r\n\r\n    const problemName = problem.name;\r\n    const problemRating = problem.rating;\r\n    const problemURL = `https://codeforces.com/problemset/problem/${problem.contestId}/${problem.index}`\r\n    let roomid = sessionStorage.getItem(\"roomid\");\r\n\r\n    const [rowBgColor, setRowBgColor] = useState(\"light\");\r\n\r\n    useEffect(() => {\r\n        axios.post(\"/api/checkUserSolved\" , {roomid:roomid , problem:problem})\r\n        .then(res => {\r\n            setRowBgColor(colorMap[res.data.userSolved]);\r\n        })\r\n        .catch(err => console.log(err));\r\n    })\r\n\r\n    socket.on(\"userSolved\", ({problemIndex, user}) => {\r\n        if(problemIndex === index)\r\n            setRowBgColor(colorMap[user]);\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <tr className={\"text-responsive table-\" + rowBgColor}>\r\n                <th scope=\"row\">{index+1}</th>  \r\n                <td><a href={problemURL} target='_blank' rel=\"noreferrer\" style={{textDecoration: 'none'}}>{problemName}</a></td>\r\n                <td>{problemRating}</td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport '../p3/Room.css'\r\n\r\nexport const Timer = ({ duration , roomid}) => {\r\n    const history = useHistory();\r\n    let [[hrs, mins, secs], setTime] = useState(returnTime());\r\n    function returnTime(){\r\n        let currentTime = new Date().getTime();\r\n        var absolute_delta = duration - currentTime;\r\n        let hrs=0,mins=0,secs=0;\r\n        if(absolute_delta >= 0){\r\n            var delta = Math.floor(Math.abs(duration - currentTime) / 1000);\r\n\r\n            hrs = Math.floor(delta / 3600) % 24;\r\n            delta -= hrs * 3600;\r\n\r\n            mins = Math.floor(delta / 60) % 60;\r\n            delta -= mins * 60;\r\n\r\n            secs = delta % 60;\r\n        }\r\n        return [hrs, mins, secs]\r\n    }\r\n    const tick = () => {\r\n            setTime(returnTime)\r\n        }    \r\n\r\n    useEffect(() => {\r\n        let timerId;\r\n        if (hrs>0 || mins>0 || secs>0) {\r\n            timerId = setInterval(() => tick(), 1000);\r\n        }\r\n        else{\r\n            if (hrs === 0 && mins === 0 && secs === 0) {\r\n                axios.post(\"/api/round/finished\", {\r\n                    roomid\r\n                })\r\n                .then((res) => {\r\n                    history.replace(`/standings/${roomid}`, { params: roomid }\r\n                )})\r\n                .catch(err => console.log(err))\r\n            }\r\n        }\r\n\r\n        return () => clearInterval(timerId);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container bg-warning text-center border border-black border-2 rounded px-0\">\r\n                <div className=\"text-responsive fw-bold border-bottom border-dark bg-info py-1\">Round Ends In</div>\r\n                <div className=\"timer-responsive\">\r\n                    {\r\n                        `${hrs} :\r\n                        ${mins} :\r\n                        ${secs}`\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { UserColors } from \"./UserColors\";\r\nimport { ProblemHead } from \"./ProblemHead\";\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './UserColors.css'\r\n\r\nvar problemsArray;\r\nvar colorMap;\r\nvar duration;\r\n\r\nexport const Page4 = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    var roomid = sessionStorage.getItem('roomid');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/checkRoomCode', { roomCode: roomid })\r\n            .then(res => {\r\n                // if (res.data.flag === false) {\r\n                //     history.push(\"/*\");\r\n                // }\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n        axios.get('/api/round', {\r\n            params: {\r\n                roomid\r\n            }\r\n        })\r\n        .then(res => {\r\n            problemsArray = res.data.problemsArray;\r\n            colorMap = res.data.colorMap;\r\n            duration = res.data.duration;\r\n            setLoading(false)\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"p-0 m-0 customBgRound\">\r\n            {\r\n                !loading ? <UserColors colorMap={colorMap} /> : null\r\n            }\r\n            {\r\n                !loading ? <ProblemHead problemsArray={problemsArray} duration={duration} colorMap={colorMap} roomid={roomid}/> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { Problem } from './Problem';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Timer } from './Timer';\r\nimport './ProblemHead.css'\r\n\r\nexport const ProblemHead = ({ problemsArray, duration, colorMap,roomid }) => {\r\n    let timerStyle = {\r\n        width: '25vw',\r\n        maxWidth: '10rem',\r\n        position: 'fixed',\r\n        top: '79vh',\r\n        right: '1rem',\r\n        zIndex: '50'\r\n    };\r\n    \r\n    let findProblemArray = (currentProblem) => {\r\n        let flag = problemsArray.some(e => {\r\n            return e.contestId === currentProblem.contestId && e.index === currentProblem.index;\r\n        })\r\n        return flag;\r\n    }\r\n\r\n    let fetchData = () => {\r\n        for (let [handle, handleColor] of Object.entries(colorMap)) {\r\n            let statusUrl = \"https://codeforces.com/api/user.status?handle=\" + handle + \"&from=1&count=1\";\r\n            axios.get(statusUrl)\r\n                .then(res => {\r\n                    let currentProblem = res.data.result[0];\r\n                    if (currentProblem.verdict === \"OK\" && findProblemArray(currentProblem.problem)) {\r\n                        axios.post(\"/api/checkAndMark\",{\r\n                                currentProblem: currentProblem,\r\n                                handle: handle,\r\n                                roomid: roomid\r\n                            }\r\n                        )\r\n                            .then()\r\n                            .catch(err => console.log(err))\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const temp = setInterval(() => fetchData(), 10000)\r\n        return () => clearInterval(temp);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container d-grid\">\r\n                <div className=\"row p-0 m-0 pb-5\">\r\n                    <div className=\"col-12 border border-black rounded p-2 mb-5\">\r\n                        <table className=\"table table-bordered my-2\">\r\n                            <thead className=\"text-responsive table-light\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Problems</th>\r\n                                    <th scope=\"col\">Rating</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {problemsArray ? (\r\n                                    problemsArray.map((problem, index) => {\r\n                                        return <Problem key={index} problem={problem} index={index} colorMap={colorMap}/>;\r\n                                    })\r\n                                ) : null}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={timerStyle} className=\"shadow-lg rounded\">\r\n                <Timer duration={duration} roomid={roomid}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <>\r\n            <div className=\"page-wrap d-flex flex-row align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span className=\"display-1 d-block\">404</span>\r\n                            <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\r\n                            <Link className=\"mx-2 btn btn-outline-primary\" to=\"/dashboard\">\r\n                                Back to Dashboard\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport logo from './HeaderLogo.png'\r\n\r\nexport const Spinner = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container text-center\" style={{ marginTop: '1vh' }}>\r\n                <img src={logo} className=\"rounded img-thumbnail\" alt=\"...\"></img>\r\n                <h1>\r\n                    Loading...\r\n                </h1>\r\n                <div className=\"spinner-grow spinner-border-sm text-secondary mx-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow spinner-border-sm text-dark mx-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n                <div className=\"spinner-grow spinner-border-sm text-secondary mx-2\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport { Spinner } from './base/Spinner'\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    let { user, loading } = useAuth();\r\n\r\n    let Comp = (props) => {\r\n        if (loading)\r\n            return <Spinner />\r\n        else\r\n            return user ? <Component {...props} /> : <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return Comp(props);\r\n            }}\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../context/AuthContext'\r\n\r\nexport const AntiProtectedRoute = ({ component: Component, ...rest }) => {\r\n    let { user } = useAuth();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return (!user ||  user.email===\"\") ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\r\n            }}\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Spinner } from \"../base/Spinner\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport './UserColors.css'\r\n\r\nexport const Standings = () => {\r\n    const { roomid } = useParams();\r\n    const [usersToPoints, setUsersToPoints] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"/api/standings\", {\r\n                params: {\r\n                    roomid: roomid,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                let roomDatum = res.data[0];\r\n                let newUsersToPoints = [];\r\n                roomDatum.users.forEach((user) => {\r\n                    newUsersToPoints.push([user.userId, 0]);\r\n                });\r\n                roomDatum.problemData.forEach((problem) => {\r\n                    newUsersToPoints.forEach((entry, index) => {\r\n                        if (entry[0] === problem.userSolved) {\r\n                            newUsersToPoints[index][1] += problem.rating;\r\n                        }\r\n                    });\r\n                });\r\n                newUsersToPoints.sort(([, a], [, b]) => b - a);\r\n                setUsersToPoints(newUsersToPoints);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n    return (\r\n        <>\r\n            <div className=\"container d-grid my-3\">\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : (\r\n                    <>\r\n                        <span className=\"fs-3 mx-1\">Standings</span>\r\n                        <div className=\"row mx-1\">\r\n                                <div className=\"col-12 rounded p-0\">\r\n                                <div className=\"container p-0\">\r\n                                        <table className=\"table table-stripped table-hover tableStyle\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                <th scope=\"col\">#</th>\r\n                                                <th scope=\"col\">Who</th>\r\n                                                <th scope=\"col\">Score</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {usersToPoints.map((entry, index) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{entry[0]}</td>\r\n                                                        <td>{entry[1]}</td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div className=\"row my-3\">\r\n                            <div className=\"col-12\">\r\n                                <Link className=\"mx-2 btn btn-outline-primary\" to=\"/dashboard\">\r\n                                    Go to Dashboard\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport Header from \"./components/base/Header\";\r\nimport { Footer } from \"./components/base/Footer\";\r\nimport { Login } from \"./components/p1/components/Login\";\r\nimport { SignUp } from \"./components/p1/components/SignUp\";\r\nimport { Forget } from \"./components/p1/components/Forget\";\r\nimport { Dashboard } from \"./components/p2/Dashboard\";\r\nimport { Room } from \"./components/p3/Room\"\r\nimport { Page4 } from \"./components/p4/Page4\"\r\nimport { Page404 } from \"./components/base/Page404\";\r\nimport { socket } from \"./Socket\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport { ProtectedRoute } from \"./components/ProtectedRoute\";\r\nimport { AntiProtectedRoute } from \"./components/AntiProtectedRoute\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport { Standings } from \"./components/p4/Standings\";\r\n\r\nfunction App() {\r\n\r\n\r\n    useEffect(() => {\r\n        var stored_roomid = sessionStorage.getItem(\"roomid\");\r\n        var stored_userid = sessionStorage.getItem(\"userid\");\r\n\r\n        if (stored_roomid && stored_userid) {\r\n            var joiningData = {\r\n                userid: stored_userid,\r\n                roomid: stored_roomid,\r\n                refresh: true\r\n            }\r\n            socket.emit(\"joinRoom\", joiningData);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <AuthProvider>\r\n            <Router>\r\n                <Header />\r\n                <Switch>\r\n                    <AntiProtectedRoute exact path={[\"/\", \"/login\"]} component={Login} />\r\n                    <Route exact path=\"/signup\" component={SignUp} />\r\n                    <Route exact path=\"/forgot\">\r\n                        <Forget />\r\n                    </Route>\r\n                    <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                    <ProtectedRoute exact path=\"/room/:roomid\" component={Room} />\r\n                    <ProtectedRoute exact path=\"/round/:roomid\" component={Page4} />\r\n                    <ProtectedRoute exact path=\"/standings/:roomid\" component={Standings} />\r\n                    <Route path=\"*\" component={Page404} />\r\n                </Switch>\r\n                <Footer />    \r\n            </Router>\r\n            </AuthProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n        <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}