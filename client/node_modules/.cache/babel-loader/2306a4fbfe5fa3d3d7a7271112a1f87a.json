{"ast":null,"code":"var _jsxFileName = \"/home/pawan/CF-KNOCKOUT/client/src/components/p4/ProblemHead.js\",\n    _s = $RefreshSig$();\n\nimport { Problem } from \"./Problem\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Timer } from \"./Timer\";\nimport \"./ProblemHead.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProblemHead = _ref => {\n  _s();\n\n  let {\n    problemsArray,\n    duration,\n    colorMap,\n    roomid\n  } = _ref;\n  let timerStyle = {\n    width: \"25vw\",\n    maxWidth: \"10rem\",\n    position: \"fixed\",\n    top: \"79vh\",\n    right: \"1rem\",\n    zIndex: \"50\"\n  };\n\n  let findProblemArray = currentProblem => {\n    let flag = problemsArray.some(e => {\n      return e.contestId === currentProblem.contestId && e.index === currentProblem.index;\n    });\n    return flag;\n  };\n\n  let fetchData = () => {\n    for (let [handle, handleColor] of Object.entries(colorMap)) {\n      let statusUrl = \"https://codeforces.com/api/user.status?handle=\" + handle + \"&from=1&count=1\";\n      axios.get(statusUrl).then(res => {\n        let currentProblem = res.data.result[0];\n\n        if (currentProblem.verdict === \"OK\" && findProblemArray(currentProblem.problem)) {\n          axios.post(\"http://localhost:4000/api/checkAndMark\", {\n            currentProblem: currentProblem,\n            handle: handle,\n            roomid: roomid\n          }).then().catch(err => console.log(err));\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n\n  useEffect(() => {\n    const temp = setInterval(() => fetchData(), 10000);\n    return () => clearInterval(temp);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-0 m-0 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 border border-black rounded p-2 mb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered my-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"text-responsive table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Problems\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: problemsArray ? problemsArray.map((problem, index) => {\n                return /*#__PURE__*/_jsxDEV(Problem, {\n                  problem: problem,\n                  index: index,\n                  colorMap: colorMap\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this);\n              }) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: timerStyle,\n      className: \"shadow-lg rounded\",\n      children: /*#__PURE__*/_jsxDEV(Timer, {\n        duration: duration,\n        roomid: roomid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProblemHead, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProblemHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProblemHead\");","map":{"version":3,"names":["Problem","useEffect","axios","Timer","ProblemHead","problemsArray","duration","colorMap","roomid","timerStyle","width","maxWidth","position","top","right","zIndex","findProblemArray","currentProblem","flag","some","e","contestId","index","fetchData","handle","handleColor","Object","entries","statusUrl","get","then","res","data","result","verdict","problem","post","catch","err","console","log","temp","setInterval","clearInterval","map"],"sources":["/home/pawan/CF-KNOCKOUT/client/src/components/p4/ProblemHead.js"],"sourcesContent":["import { Problem } from \"./Problem\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Timer } from \"./Timer\";\nimport \"./ProblemHead.css\";\n\nexport const ProblemHead = ({ problemsArray, duration, colorMap, roomid }) => {\n  let timerStyle = {\n    width: \"25vw\",\n    maxWidth: \"10rem\",\n    position: \"fixed\",\n    top: \"79vh\",\n    right: \"1rem\",\n    zIndex: \"50\",\n  };\n\n  let findProblemArray = (currentProblem) => {\n    let flag = problemsArray.some((e) => {\n      return (\n        e.contestId === currentProblem.contestId &&\n        e.index === currentProblem.index\n      );\n    });\n    return flag;\n  };\n\n  let fetchData = () => {\n    for (let [handle, handleColor] of Object.entries(colorMap)) {\n      let statusUrl =\n        \"https://codeforces.com/api/user.status?handle=\" +\n        handle +\n        \"&from=1&count=1\";\n      axios\n        .get(statusUrl)\n        .then((res) => {\n          let currentProblem = res.data.result[0];\n          if (\n            currentProblem.verdict === \"OK\" &&\n            findProblemArray(currentProblem.problem)\n          ) {\n            axios\n              .post(\"http://localhost:4000/api/checkAndMark\", {\n                currentProblem: currentProblem,\n                handle: handle,\n                roomid: roomid,\n              })\n              .then()\n              .catch((err) => console.log(err));\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  useEffect(() => {\n    const temp = setInterval(() => fetchData(), 10000);\n    return () => clearInterval(temp);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container d-grid\">\n        <div className=\"row p-0 m-0 pb-5\">\n          <div className=\"col-12 border border-black rounded p-2 mb-5\">\n            <table className=\"table table-bordered my-2\">\n              <thead className=\"text-responsive table-light\">\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Problems</th>\n                  <th scope=\"col\">Rating</th>\n                </tr>\n              </thead>\n              <tbody>\n                {problemsArray\n                  ? problemsArray.map((problem, index) => {\n                      return (\n                        <Problem\n                          key={index}\n                          problem={problem}\n                          index={index}\n                          colorMap={colorMap}\n                        />\n                      );\n                    })\n                  : null}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div style={timerStyle} className=\"shadow-lg rounded\">\n        <Timer duration={duration} roomid={roomid} />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}