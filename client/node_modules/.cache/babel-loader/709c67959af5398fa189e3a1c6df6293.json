{"ast":null,"code":"var _jsxFileName = \"/home/pawan/CF-KNOCKOUT/client/src/components/p4/Problem.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './UserColors.css';\nimport { socket } from \"../../Socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Problem(_ref) {\n  _s();\n\n  let {\n    problem,\n    index,\n    colorMap\n  } = _ref;\n  const problemName = problem.name;\n  const problemRating = problem.rating;\n  const problemURL = `https://codeforces.com/problemset/problem/${problem.contestId}/${problem.index}`;\n  let roomid = sessionStorage.getItem(\"roomid\");\n  const [rowBgColor, setRowBgColor] = useState(\"light\");\n  useEffect(() => {\n    axios.post(\"/api/checkUserSolved\", {\n      roomid: roomid,\n      problem: problem\n    }).then(res => {\n      setRowBgColor(colorMap[res.data.userSolved]);\n    }).catch(err => console.log(err));\n  });\n  socket.on(\"userSolved\", _ref2 => {\n    let {\n      problemIndex,\n      user\n    } = _ref2;\n    if (problemIndex === index) setRowBgColor(colorMap[user]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"text-responsive\",\n      style: {\n        backgroundColor: rowBgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: problemURL,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: problemName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: problemRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Problem, \"X+km9j2k2m/4Ec48cSKM1QUXt0o=\");\n\n_c = Problem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["axios","useEffect","useState","socket","Problem","problem","index","colorMap","problemName","name","problemRating","rating","problemURL","contestId","roomid","sessionStorage","getItem","rowBgColor","setRowBgColor","post","then","res","data","userSolved","catch","err","console","log","on","problemIndex","user","backgroundColor","textDecoration"],"sources":["/home/pawan/CF-KNOCKOUT/client/src/components/p4/Problem.js"],"sourcesContent":["import axios from 'axios';\nimport {useEffect , useState} from 'react'\nimport './UserColors.css'\nimport {socket} from \"../../Socket\"\n\nexport function Problem({ problem, index , colorMap}) {\n\n    const problemName = problem.name;\n    const problemRating = problem.rating;\n    const problemURL = `https://codeforces.com/problemset/problem/${problem.contestId}/${problem.index}`\n    let roomid = sessionStorage.getItem(\"roomid\");\n\n    const [rowBgColor, setRowBgColor] = useState(\"light\");\n\n    useEffect(() => {\n        axios.post(\"/api/checkUserSolved\" , {roomid:roomid , problem:problem})\n        .then(res => {\n            setRowBgColor(colorMap[res.data.userSolved]);\n        })\n        .catch(err => console.log(err));\n    })\n\n    socket.on(\"userSolved\", ({problemIndex, user}) => {\n        if(problemIndex === index)\n            setRowBgColor(colorMap[user]);\n    })\n\n    return (\n        <>\n            <tr className={\"text-responsive\"} style={{ backgroundColor: rowBgColor}}>\n                <th scope=\"row\">{index+1}</th>  \n                <td><a href={problemURL} target='_blank' rel=\"noreferrer\" style={{textDecoration: 'none'}}>{problemName}</a></td>\n                <td>{problemRating}</td>\n            </tr>\n        </>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAO,kBAAP;AACA,SAAQC,MAAR,QAAqB,cAArB;;;AAEA,OAAO,SAASC,OAAT,OAA+C;EAAA;;EAAA,IAA9B;IAAEC,OAAF;IAAWC,KAAX;IAAmBC;EAAnB,CAA8B;EAElD,MAAMC,WAAW,GAAGH,OAAO,CAACI,IAA5B;EACA,MAAMC,aAAa,GAAGL,OAAO,CAACM,MAA9B;EACA,MAAMC,UAAU,GAAI,6CAA4CP,OAAO,CAACQ,SAAU,IAAGR,OAAO,CAACC,KAAM,EAAnG;EACA,IAAIQ,MAAM,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAb;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,OAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACZD,KAAK,CAACmB,IAAN,CAAW,sBAAX,EAAoC;MAACL,MAAM,EAACA,MAAR;MAAiBT,OAAO,EAACA;IAAzB,CAApC,EACCe,IADD,CACMC,GAAG,IAAI;MACTH,aAAa,CAACX,QAAQ,CAACc,GAAG,CAACC,IAAJ,CAASC,UAAV,CAAT,CAAb;IACH,CAHD,EAICC,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;EAKH,CANQ,CAAT;EAQAtB,MAAM,CAACyB,EAAP,CAAU,YAAV,EAAwB,SAA0B;IAAA,IAAzB;MAACC,YAAD;MAAeC;IAAf,CAAyB;IAC9C,IAAGD,YAAY,KAAKvB,KAApB,EACIY,aAAa,CAACX,QAAQ,CAACuB,IAAD,CAAT,CAAb;EACP,CAHD;EAKA,oBACI;IAAA,uBACI;MAAI,SAAS,EAAE,iBAAf;MAAkC,KAAK,EAAE;QAAEC,eAAe,EAAEd;MAAnB,CAAzC;MAAA,wBACI;QAAI,KAAK,EAAC,KAAV;QAAA,UAAiBX,KAAK,GAAC;MAAvB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,uBAAI;UAAG,IAAI,EAAEM,UAAT;UAAqB,MAAM,EAAC,QAA5B;UAAqC,GAAG,EAAC,YAAzC;UAAsD,KAAK,EAAE;YAACoB,cAAc,EAAE;UAAjB,CAA7D;UAAA,UAAwFxB;QAAxF;UAAA;UAAA;UAAA;QAAA;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,UAAKE;MAAL;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AASH;;GA/BeN,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}