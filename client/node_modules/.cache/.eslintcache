[{"/home/pawan/CF-KNOCKOUT/client/src/index.js":"1","/home/pawan/CF-KNOCKOUT/client/src/App.js":"2","/home/pawan/CF-KNOCKOUT/client/src/Socket.js":"3","/home/pawan/CF-KNOCKOUT/client/src/components/ProtectedRoute.js":"4","/home/pawan/CF-KNOCKOUT/client/src/context/AuthContext.js":"5","/home/pawan/CF-KNOCKOUT/client/src/components/AntiProtectedRoute.js":"6","/home/pawan/CF-KNOCKOUT/client/src/components/base/Header.js":"7","/home/pawan/CF-KNOCKOUT/client/src/components/base/Page404.js":"8","/home/pawan/CF-KNOCKOUT/client/src/components/base/Footer.js":"9","/home/pawan/CF-KNOCKOUT/client/src/components/p2/Dashboard.js":"10","/home/pawan/CF-KNOCKOUT/client/src/components/p3/Room.js":"11","/home/pawan/CF-KNOCKOUT/client/src/components/p4/Page4.js":"12","/home/pawan/CF-KNOCKOUT/client/src/components/p4/Standings.js":"13","/home/pawan/CF-KNOCKOUT/client/src/components/p1/components/Forget.js":"14","/home/pawan/CF-KNOCKOUT/client/src/components/p1/components/SignUp.js":"15","/home/pawan/CF-KNOCKOUT/client/src/components/p1/components/Login.js":"16","/home/pawan/CF-KNOCKOUT/client/src/Firebase.js":"17","/home/pawan/CF-KNOCKOUT/client/src/components/base/Spinner.js":"18","/home/pawan/CF-KNOCKOUT/client/src/components/p3/UserCard.js":"19","/home/pawan/CF-KNOCKOUT/client/src/components/p4/ProblemHead.js":"20","/home/pawan/CF-KNOCKOUT/client/src/components/p4/UserColors.js":"21","/home/pawan/CF-KNOCKOUT/client/src/components/p4/Problem.js":"22","/home/pawan/CF-KNOCKOUT/client/src/components/p4/UserColorDisplay.js":"23","/home/pawan/CF-KNOCKOUT/client/src/components/p4/Timer.js":"24"},{"size":200,"mtime":1627481837000,"results":"25","hashOfConfig":"26"},{"size":2262,"mtime":1627481837000,"results":"27","hashOfConfig":"26"},{"size":754,"mtime":1651312077619,"results":"28","hashOfConfig":"26"},{"size":619,"mtime":1627481837000,"results":"29","hashOfConfig":"26"},{"size":1232,"mtime":1651311806578,"results":"30","hashOfConfig":"26"},{"size":472,"mtime":1627481837000,"results":"31","hashOfConfig":"26"},{"size":1691,"mtime":1627481837000,"results":"32","hashOfConfig":"26"},{"size":848,"mtime":1627481837000,"results":"33","hashOfConfig":"26"},{"size":485,"mtime":1651520608218,"results":"34","hashOfConfig":"26"},{"size":8065,"mtime":1651311414720,"results":"35","hashOfConfig":"26"},{"size":9495,"mtime":1651311806586,"results":"36","hashOfConfig":"26"},{"size":1391,"mtime":1651311527892,"results":"37","hashOfConfig":"26"},{"size":2665,"mtime":1651415166814,"results":"38","hashOfConfig":"26"},{"size":125,"mtime":1627481837000,"results":"39","hashOfConfig":"26"},{"size":3157,"mtime":1651520736737,"results":"40","hashOfConfig":"26"},{"size":3329,"mtime":1651520724442,"results":"41","hashOfConfig":"26"},{"size":992,"mtime":1651311806582,"results":"42","hashOfConfig":"26"},{"size":972,"mtime":1627481837000,"results":"43","hashOfConfig":"26"},{"size":1995,"mtime":1651520756508,"results":"44","hashOfConfig":"26"},{"size":2748,"mtime":1651311551469,"results":"45","hashOfConfig":"26"},{"size":608,"mtime":1627481837000,"results":"46","hashOfConfig":"26"},{"size":1260,"mtime":1651311806582,"results":"47","hashOfConfig":"26"},{"size":283,"mtime":1627481837000,"results":"48","hashOfConfig":"26"},{"size":2004,"mtime":1651311806582,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"s47k5z",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/pawan/CF-KNOCKOUT/client/src/index.js",[],["106","107"],"/home/pawan/CF-KNOCKOUT/client/src/App.js",[],"/home/pawan/CF-KNOCKOUT/client/src/Socket.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/ProtectedRoute.js",[],"/home/pawan/CF-KNOCKOUT/client/src/context/AuthContext.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/AntiProtectedRoute.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/base/Header.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/base/Page404.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/base/Footer.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p2/Dashboard.js",["108","109","110","111"],"import React from \"react\";\nimport \"./Dashboard.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { socket, handleCreate, handleJoin } from \"../../Socket\";\nimport { useAuth } from \"../../context/AuthContext\";\n\nexport const Dashboard = () => {\n  const history = useHistory();\n  var userid = sessionStorage.getItem(\"userid\");\n  const [room, setRoom] = useState({ id: \"\", size: \"\" });\n  const [joined, setJoined] = useState(false);\n  const [handle, setHandle] = useState(\"\");\n  let [firstName, setFirstName] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  let [messageHandle, setMessageHandle] = useState(\"\");\n  let handleRef = useRef();\n  let { user } = useAuth();\n  let roomCodeRef = useRef();\n  var setIntervalVar;\n  var randomId = require(\"../../../node_modules/random-id\");\n\n  let intervalFunction = async () => {\n    if (user && !handle) {\n      axios\n        .post(\"http://localhost:4000/api/findHandle\", { username: user.email })\n        .then((res) => {\n          sessionStorage.setItem(\"userid\", res.data);\n          setHandle(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    setFirstName(randomId(20, \"aA0\"));\n    (async () => {\n      await intervalFunction();\n    })();\n  }, []);\n\n  let handleValidate = (e) => {\n    let userInfoUrl =\n      \"https://codeforces.com/api/user.info?handles=\" + handleRef.current.value;\n\n    axios\n      .get(userInfoUrl)\n      .then((res) => {\n        if (res.data.result[0].firstName === firstName) {\n          axios\n            .post(\"http://localhost:4000/api/updateUserHandle\", {\n              handle: handleRef.current.value,\n              username: user.email,\n            })\n            .then((res) => {\n              sessionStorage.setItem(\"userid\", handleRef.current.value);\n              setHandle(handleRef.current.value);\n              setMessageHandle(\"\");\n            })\n            .catch((err) => console.log(err));\n        } else {\n          setMessageHandle(\n            \"Either you copied a wrong string or you entered a wrong handle\"\n          );\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  let handleUpdate = (e) => {\n    if (window.confirm(\"Are you sure you want to update Handle ?\")) {\n      axios\n        .post(\"http://localhost:4000/api/deleteHandle\", {\n          username: user.email,\n        })\n        .then((res) => {\n          sessionStorage.setItem(\"userid\", \"\");\n          setHandle(\"\");\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  let roomValidate = () => {\n    axios\n      .post(\"http://localhost:4000/api/checkRoomCode\", {\n        roomCode: roomCodeRef.current.value,\n      })\n      .then((res) => {\n        setMessage(res.data.message);\n\n        if (res.data.flag === true) {\n          userid = handle;\n          handleJoin(userid, room.id, socket);\n          setJoined(true);\n          setMessage(\"\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  socket.on(\"roomCreated\", (roomData) => {\n    history.push(`/room/${room.id}`);\n  });\n\n  if (joined) {\n    history.push(`/room/${room.id}`, { params: room.id });\n  }\n\n  return (\n    <div className=\"p-0 m-0 customBgDash\">\n      <div className=\"p-sm-4 px-1 bg-dark text-light w-100 d-grid\">\n        <div className=\"row mx-2\">\n          <div className=\"col-md-2 col-sm-1 col-0\"></div>\n          <div className=\"col-md-8 col-sm-10 col-12\">\n            {handle ? null : (\n              <div className=\"alert alert-info p-1 my-1\" role=\"alert\">\n                {\"Paste this string in firstname field  - \"}\n                {<strong>{firstName}</strong>}\n              </div>\n            )}\n            {messageHandle ? (\n              <div className=\"alert alert-danger p-1 my-1\" role=\"alert\">\n                {messageHandle}\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"row m-2\">\n          <div className=\"col-md-2 col-sm-1 col-0\"></div>\n          <div className=\"col-md-6 col-sm-8 col-12 text-info\">\n            <div className=\"input-group\">\n              <span className=\"input-group-text\">Handle</span>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                ref={handleRef}\n                placeholder={handle ? handle : \"Enter your CF Handle\"}\n              />\n            </div>\n          </div>\n          {handle ? (\n            <button\n              className=\"col-md-2 col-sm-2 col-6 my-sm-0 my-2 mx-auto btn btn-success btn-block p-1\"\n              onClick={(e) => handleUpdate(e)}\n            >\n              Update\n            </button>\n          ) : (\n            <button\n              className=\"col-md-2 col-sm-2 col-6 my-sm-0 my-2 mx-auto btn btn-success btn-block p-1\"\n              onClick={(e) => handleValidate(e)}\n            >\n              Validate\n            </button>\n          )}\n          <div className=\"col-md-2 col-sm-1 col-0\"></div>\n        </div>\n      </div>\n\n      {\n        <div className=\"p-sm-5 p-4 container-fluid border w-50 justify-content-center my-md-5 my-3 shadow mb-5 rounded bg-light\">\n          <div className=\"row py-2\">\n            <div className=\"col-md-7 col-sm-12 px-0\">\n              <div className=\"dropdown h-100\">\n                <select\n                  className=\"form-select\"\n                  aria-label=\"Default select example\"\n                  onChange={(e) => {\n                    setRoom((prevState) => ({\n                      ...prevState,\n                      [\"size\"]: e.target.value,\n                    }));\n                  }}\n                >\n                  <option defaultValue value=\"2\">\n                    Room Size\n                  </option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                  <option value=\"3\">Four</option>\n                  <option value=\"3\">Five</option>\n                  <option value=\"6\">Six</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-1 col-sm-0\"></div>\n            <div className=\"col-md-4 col-sm-12 px-0 mx-sm-auto my-md-0 my-2\">\n              <button\n                className=\"w-100 btn btn-primary\"\n                onClick={() => {\n                  userid = handle;\n                  handleCreate(userid, room.size, socket);\n                  room.id = sessionStorage.getItem(\"roomid\");\n                }}\n                disabled={handle === \"\" ? true : false}\n              >\n                Create A Room\n              </button>\n            </div>\n          </div>\n          <div id=\"lineor\">\n            <div className=\"lines\"></div>\n            <div>\n              <span>OR</span>\n            </div>\n            <div className=\"lines\"></div>\n          </div>\n          <div className=\"row px-0 py-2\">\n            <div className=\"col-md-7 col-sm-12 px-0\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setRoom((prevState) => ({\n                    ...prevState,\n                    [\"id\"]: e.target.value,\n                  }));\n                }}\n                ref={roomCodeRef}\n              />\n            </div>\n            <div className=\"col-md-1 col-sm-0\"></div>\n            <div className=\"col-md-4 col-sm-12 px-0 mx-sm-auto my-md-0 my-2\">\n              <button\n                className=\"w-100 btn btn-danger\"\n                onClick={() => {\n                  roomValidate();\n                }}\n                disabled={handle === \"\" ? true : false}\n              >\n                Join A Room\n              </button>\n            </div>\n          </div>\n          {message ? (\n            <div\n              className=\"alert alert-danger row p-1 px-2 my-0 mt-1\"\n              role=\"alert\"\n            >\n              {\" \"}\n              {message}{\" \"}\n            </div>\n          ) : null}\n        </div>\n      }\n    </div>\n  );\n};\n","/home/pawan/CF-KNOCKOUT/client/src/components/p3/Room.js",["112","113","114"],"import axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { socket } from \"../../Socket\";\nimport { UserCard } from \"./UserCard\";\nimport \"./Room.css\";\nvar admin;\n\nexport const Room = () => {\n  const history = useHistory();\n  const location = useLocation();\n  var randomColor = require(\"randomcolor\");\n\n  let locationPath = location.pathname;\n  var roomid = locationPath.split(\"/\").pop();\n  let definedColors = [\n    \"success\",\n    \"warning\",\n    \"info\",\n    \"danger\",\n    \"primary\",\n    \"dark\",\n  ];\n\n  const [roomData, setRoomData] = useState({ users: [] });\n  const [problemData, setProblemData] = useState({\n    problems: 0,\n    lrating: 0,\n    urating: 0,\n  });\n  const [duration, setDuration] = useState(0);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/api/checkRoomCode\", { roomCode: roomid })\n      .then((res) => {\n        if (res.data.flag == true) {\n          var userid = sessionStorage.getItem(\"userid\");\n          var refresh = sessionStorage.getItem(\"refresh\");\n          var roomSize = sessionStorage.getItem(\"roomsize\");\n          var joiningData = {\n            userid: userid,\n            roomid: roomid,\n            refresh: refresh,\n            roomsize: roomSize,\n          };\n\n          socket.emit(\"join\", joiningData);\n          if (refresh === 0) {\n            sessionStorage.setItem(\"refresh\", 1);\n          }\n        } else {\n          history.replace(\"/invalid\");\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  socket.on(\"updateRoomData\", (roomData) => {\n    sessionStorage.setItem(\"roomData\", JSON.stringify(roomData));\n    admin = roomData.users[0].userId;\n    setRoomData(roomData);\n  });\n\n  socket.on(\"leaveRoom\", () => {\n    history.replace(\"/dashboard\");\n  });\n\n  socket.on(\"startContest\", (roomid) => {\n    history.push({\n      pathname: `/round/${roomid}`,\n    });\n  });\n\n  const remove = (user) => {\n    let removeData = {\n      user,\n      roomid,\n    };\n    socket.emit(\"remove\", removeData);\n  };\n\n  const [problemsLoading, setProblemsLoading] = useState(true);\n  var problems = [];\n  var colorMap = {};\n\n  const validate = () => {\n    let endTime = new Date().getTime() + duration * 60 * 1000;\n    axios\n      .post(\"http://localhost:4000/api/round/duration\", {\n        roomid: roomid,\n        duration: endTime,\n      })\n      .then((res) => {\n        console.log(res.data);\n        socket.emit(\"startContest\", roomid);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const generate = () => {\n    setProblemsLoading(true);\n    var problemInt = parseInt(problemData.problems);\n    var lrangeInt = parseInt(problemData.lrating);\n    var urangeInt = parseInt(problemData.urating);\n\n    problemInt = Math.min(problemInt, 30);\n    problemInt = Math.max(problemInt, 1);\n\n    lrangeInt = Math.max(lrangeInt, 800);\n    lrangeInt = Math.min(lrangeInt, 3500);\n    urangeInt = Math.max(urangeInt, 800);\n\n    urangeInt = Math.max(urangeInt, lrangeInt);\n    urangeInt = Math.min(urangeInt, 3500);\n\n    for (let i = 800; i <= 3500; i += 100) {\n      if (lrangeInt <= i) {\n        lrangeInt = i;\n        break;\n      }\n    }\n    for (let i = 800; i <= 3500; i += 100) {\n      if (urangeInt <= i) {\n        urangeInt = i;\n        break;\n      }\n    }\n\n    let problemApiURL = \"https://codeforces.com/api/problemset.problems?\";\n    let problemsArray = [];\n\n    axios\n      .get(problemApiURL)\n      .then((res) => {\n        let arraySize = res.data.result.problems.length;\n        let taken = new Map();\n\n        for (let i = 0; i < problemInt; ) {\n          let idx = Math.floor(Math.random() * arraySize);\n\n          let problemObj = res.data.result.problems[idx];\n\n          if (\n            problemObj.rating &&\n            problemObj.rating >= lrangeInt &&\n            problemObj.rating <= urangeInt &&\n            !taken[idx]\n          ) {\n            problemObj[\"userSolved\"] = \"\";\n            problemsArray.push(problemObj);\n            taken[idx] = true;\n            i++;\n          }\n        }\n        console.log(problemsArray);\n        roomData.users.forEach((user) => {\n          colorMap[user.userId] = randomColor({ luminosity: \"light\" });\n        });\n        console.log(colorMap);\n        problems = problemsArray;\n\n        axios\n          .post(\"http://localhost:4000/api/round/problems\", {\n            roomid: roomid,\n            problemsArray: problems,\n            colorMap: colorMap,\n          })\n          .then((res) => {})\n          .catch((err) => console.log(err));\n\n        setProblemsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  let ready = (user) => {\n    let readyData = {\n      user,\n      roomid,\n    };\n    socket.emit(\"ready\", readyData);\n  };\n\n  return (\n    <div className=\"customBgRoom\">\n      {admin === sessionStorage.getItem(\"userid\") ? (\n        <div className=\"container d-grid\">\n          <div className=\"row px-0\">\n            <div className=\"col-7 px-0\">\n              <div className=\"input-group mb-3 my-3\">\n                <span className=\"input-group-text px-2 text-responsive fw-bold\">\n                  Number of Problems\n                </span>\n                <input\n                  required={true}\n                  type=\"number\"\n                  min=\"1\"\n                  className=\"form-control text-responsive\"\n                  placeholder=\"Enter Number of problems\"\n                  id=\"numberOfProblems\"\n                  onChange={(e) =>\n                    setProblemData((prevState) => ({\n                      ...prevState,\n                      problems: e.target.value,\n                    }))\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"mx-0 col-5 px-0 mt-3 justify-content-center text-end\">\n              <button\n                className=\"btn btn-info btn-block text-responsive px-1\"\n                onClick={() => navigator.clipboard.writeText(roomid)}\n              >\n                Room Code <i className=\"fas fa-copy\"></i>\n              </button>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-7 px-0\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text px-2 text-responsive fw-bold\">\n                  Rating Range\n                </span>\n                <input\n                  required={true}\n                  type=\"number\"\n                  min=\"800\"\n                  max=\"3500\"\n                  step=\"100\"\n                  placeholder=\"Starting from\"\n                  className=\"form-control text-responsive\"\n                  id=\"startRating\"\n                  onChange={(e) =>\n                    setProblemData((prevState) => ({\n                      ...prevState,\n                      lrating: e.target.value,\n                    }))\n                  }\n                />\n                <input\n                  required={true}\n                  type=\"number\"\n                  min=\"800\"\n                  max=\"3500\"\n                  step=\"100\"\n                  placeholder=\"Ending at\"\n                  className=\"form-control text-responsive\"\n                  id=\"endRating\"\n                  onChange={(e) =>\n                    setProblemData((prevState) => ({\n                      ...prevState,\n                      urating: e.target.value,\n                    }))\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"col-5 text-end\" style={{ paddingRight: 0 }}>\n              <div className=\"input-group mb-3\">\n                <span className=\"input-group-text px-2 text-responsive fw-bold\">\n                  Duration\n                </span>\n                <input\n                  required={true}\n                  type=\"number\"\n                  min=\"1\"\n                  className=\"form-control text-responsive\"\n                  placeholder=\"Duration in minutes\"\n                  id=\"duration\"\n                  onChange={(e) =>\n                    setDuration(Math.floor(parseInt(e.target.value)))\n                  }\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row my-3\">\n            <div className=\"col px-0\">\n              <button\n                className=\"btn btn-primary btn-block text-responsive fw-bold m-auto text-responsive\"\n                onClick={generate}\n              >\n                Generate Problems\n              </button>\n            </div>\n          </div>\n\n          <div className=\"row text-center my-3\">\n            <div className=\"col\">\n              <button\n                className=\"btn w-25 btn-success btn-block text-responsive fw-bold\"\n                disabled={problemsLoading}\n                onClick={validate}\n              >\n                {\" \"}\n                Start Contest\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      <div className=\"fluid-container d-flex justify-content-around align-content-around py-3 flex-wrap\">\n        {roomData.users\n          ? roomData.users.map((user, idx) => {\n              return (\n                <UserCard\n                  user={user}\n                  admin={admin}\n                  remove={remove}\n                  ready={ready}\n                  key={idx}\n                />\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n","/home/pawan/CF-KNOCKOUT/client/src/components/p4/Page4.js",["115","116"],"import { useEffect, useState } from \"react\";\nimport { UserColors } from \"./UserColors\";\nimport { ProblemHead } from \"./ProblemHead\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UserColors.css\";\n\nvar problemsArray;\nvar colorMap;\nvar duration;\n\nexport const Page4 = () => {\n  const [loading, setLoading] = useState(true);\n  var roomid = sessionStorage.getItem(\"roomid\");\n  const history = useHistory();\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4000/api/checkRoomCode\", { roomCode: roomid })\n      .then((res) => {\n        // if (res.data.flag === false) {\n        //     history.push(\"/*\");\n        // }\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(\"http://localhost:4000/api/round\", {\n        params: {\n          roomid,\n        },\n      })\n      .then((res) => {\n        problemsArray = res.data.problemsArray;\n        colorMap = res.data.colorMap;\n        duration = res.data.duration;\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"p-0 m-0 customBgRound\">\n      {!loading ? <UserColors colorMap={colorMap} /> : null}\n      {!loading ? (\n        <ProblemHead\n          problemsArray={problemsArray}\n          duration={duration}\n          colorMap={colorMap}\n          roomid={roomid}\n        />\n      ) : null}\n    </div>\n  );\n};\n","/home/pawan/CF-KNOCKOUT/client/src/components/p4/Standings.js",["117"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Spinner } from \"../base/Spinner\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./UserColors.css\";\n\nexport const Standings = () => {\n  const { roomid } = useParams();\n  const [usersToPoints, setUsersToPoints] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/api/standings\", {\n        params: {\n          roomid: roomid,\n        },\n      })\n      .then((res) => {\n        let roomDatum = res.data[0];\n        let newUsersToPoints = [];\n        roomDatum.users.forEach((user) => {\n          newUsersToPoints.push([user.userId, 0]);\n        });\n        roomDatum.problemData.forEach((problem) => {\n          newUsersToPoints.forEach((entry, index) => {\n            if (entry[0] === problem.userSolved) {\n              newUsersToPoints[index][1] += problem.rating;\n            }\n          });\n        });\n        newUsersToPoints.sort(([, a], [, b]) => b - a);\n        setUsersToPoints(newUsersToPoints);\n        setLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <>\n      <div className=\"container d-grid my-3\">\n        {loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <span className=\"fs-3 mx-1\">Standings</span>\n            <div className=\"row mx-1\">\n              <div className=\"col-12 rounded p-0\">\n                <div className=\"container p-0\">\n                  <table className=\"table table-stripped table-hover tableStyle\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Who</th>\n                        <th scope=\"col\">Score</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {usersToPoints.map((entry, index) => {\n                        return (\n                          <tr>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td>{entry[0]}</td>\n                            <td>{entry[1]}</td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row my-3\">\n              <div className=\"col-12\">\n                <Link className=\"mx-2 btn btn-outline-primary\" to=\"/dashboard\">\n                  Go to Dashboard\n                </Link>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","/home/pawan/CF-KNOCKOUT/client/src/components/p1/components/Forget.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p1/components/SignUp.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p1/components/Login.js",[],"/home/pawan/CF-KNOCKOUT/client/src/Firebase.js",["118","119","120","121"],"// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/app\";\n//import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth } from \"firebase/auth\";\nimport { config } from \"dotenv\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBeA1oMNSMqC1LHVkv84RB2EEWmI5JZZSc\",\n  authDomain: \"cf-knockout.firebaseapp.com\",\n  projectId: \"cf-knockout\",\n  storageBucket: \"cf-knockout.appspot.com\",\n  messagingSenderId: \"136734052175\",\n  appId: \"1:136734052175:web:8a4b989c4884f05e197f3a\",\n  measurementId: \"G-B3BL46YGJJ\",\n};\n\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\n\nexport default auth;\n//const analytics = getAnalytics(app);\n","/home/pawan/CF-KNOCKOUT/client/src/components/base/Spinner.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p3/UserCard.js",["122","123"],"import { useState, useEffect } from \"react\";\nimport \"./Room.css\";\n\nconst axios = require(\"axios\");\n\nexport const UserCard = (props) => {\n  var user = props.user.userId;\n  var admin = props.admin;\n  var userReady = props.user.isReady;\n  var currentUser = sessionStorage.getItem(\"userid\");\n\n  const [imageURL, setimageURL] = useState();\n\n  useEffect(() => {\n    axios\n      .get(\"https://codeforces.com/api/user.info?handles=\" + user)\n      .then((res) => {\n        setimageURL(res.data.result[0].titlePhoto);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return () => {};\n  }, []);\n  var buttonSet = null;\n\n  if (admin === currentUser) {\n    if (currentUser === user) {\n      buttonSet = (\n        <button\n          className=\"btn btn-danger text-responsive\"\n          onClick={() => props.remove(props.user)}\n        >\n          Leave\n        </button>\n      );\n    } else {\n      buttonSet = (\n        <button\n          className=\"btn btn-danger text-responsive\"\n          onClick={() => props.remove(props.user)}\n        >\n          Remove\n        </button>\n      );\n    }\n  } else {\n    if (currentUser === user) {\n      buttonSet = (\n        <button\n          className=\"btn btn-success text-responsive\"\n          onClick={(e) => {\n            e.target.disabled = true;\n            props.ready(props.user);\n          }}\n        >\n          Ready\n        </button>\n      );\n    }\n  }\n\n  return (\n    <>\n      <div className={\"card my-sm-2 my-1 p-sm-2 p-1 mx-3\"}>\n        <img\n          src={imageURL}\n          className=\"img-thumbnail mx-auto my-2\"\n          alt=\"Loading Profile Image\"\n          style={{ height: \"9vw\", width: \"9vw\" }}\n        />\n        <div className=\"mx-auto text-center\">\n          <h5\n            className={\n              \"text-responsive card-title \" +\n              (userReady ? \"text-success\" : \"text-danger\")\n            }\n          >\n            {user}\n          </h5>\n          {buttonSet}\n        </div>\n      </div>\n    </>\n  );\n};\n","/home/pawan/CF-KNOCKOUT/client/src/components/p4/ProblemHead.js",["124","125"],"import { Problem } from \"./Problem\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Timer } from \"./Timer\";\nimport \"./ProblemHead.css\";\n\nexport const ProblemHead = ({ problemsArray, duration, colorMap, roomid }) => {\n  let timerStyle = {\n    width: \"25vw\",\n    maxWidth: \"10rem\",\n    position: \"fixed\",\n    top: \"79vh\",\n    right: \"1rem\",\n    zIndex: \"50\",\n  };\n\n  let findProblemArray = (currentProblem) => {\n    let flag = problemsArray.some((e) => {\n      return (\n        e.contestId === currentProblem.contestId &&\n        e.index === currentProblem.index\n      );\n    });\n    return flag;\n  };\n\n  let fetchData = () => {\n    for (let [handle, handleColor] of Object.entries(colorMap)) {\n      let statusUrl =\n        \"https://codeforces.com/api/user.status?handle=\" +\n        handle +\n        \"&from=1&count=1\";\n      axios\n        .get(statusUrl)\n        .then((res) => {\n          let currentProblem = res.data.result[0];\n          if (\n            currentProblem.verdict === \"OK\" &&\n            findProblemArray(currentProblem.problem)\n          ) {\n            axios\n              .post(\"http://localhost:4000/api/checkAndMark\", {\n                currentProblem: currentProblem,\n                handle: handle,\n                roomid: roomid,\n              })\n              .then()\n              .catch((err) => console.log(err));\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  useEffect(() => {\n    const temp = setInterval(() => fetchData(), 10000);\n    return () => clearInterval(temp);\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container d-grid\">\n        <div className=\"row p-0 m-0 pb-5\">\n          <div className=\"col-12 border border-black rounded p-2 mb-5\">\n            <table className=\"table table-bordered my-2\">\n              <thead className=\"text-responsive table-light\">\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Problems</th>\n                  <th scope=\"col\">Rating</th>\n                </tr>\n              </thead>\n              <tbody>\n                {problemsArray\n                  ? problemsArray.map((problem, index) => {\n                      return (\n                        <Problem\n                          key={index}\n                          problem={problem}\n                          index={index}\n                          colorMap={colorMap}\n                        />\n                      );\n                    })\n                  : null}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div style={timerStyle} className=\"shadow-lg rounded\">\n        <Timer duration={duration} roomid={roomid} />\n      </div>\n    </div>\n  );\n};\n","/home/pawan/CF-KNOCKOUT/client/src/components/p4/UserColors.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p4/Problem.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p4/UserColorDisplay.js",[],"/home/pawan/CF-KNOCKOUT/client/src/components/p4/Timer.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":21,"column":7,"nodeType":"132","messageId":"133","endLine":21,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":43,"column":6,"nodeType":"136","endLine":43,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":175,"column":23,"nodeType":"140","messageId":"141","endLine":175,"endColumn":47,"fix":"142"},{"ruleId":"138","severity":1,"message":"143","line":220,"column":21,"nodeType":"140","messageId":"141","endLine":220,"endColumn":43,"fix":"144"},{"ruleId":"130","severity":1,"message":"145","line":17,"column":7,"nodeType":"132","messageId":"133","endLine":17,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":38,"column":27,"nodeType":"148","messageId":"149","endLine":38,"endColumn":29},{"ruleId":"134","severity":1,"message":"150","line":58,"column":6,"nodeType":"136","endLine":58,"endColumn":8,"suggestions":"151"},{"ruleId":"130","severity":1,"message":"152","line":15,"column":9,"nodeType":"132","messageId":"133","endLine":15,"endColumn":16},{"ruleId":"134","severity":1,"message":"153","line":40,"column":6,"nodeType":"136","endLine":40,"endColumn":8,"suggestions":"154"},{"ruleId":"134","severity":1,"message":"153","line":37,"column":6,"nodeType":"136","endLine":37,"endColumn":8,"suggestions":"155"},{"ruleId":"130","severity":1,"message":"156","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":22},{"ruleId":"130","severity":1,"message":"157","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":17},{"ruleId":"130","severity":1,"message":"158","line":6,"column":10,"nodeType":"132","messageId":"133","endLine":6,"endColumn":16},{"ruleId":"130","severity":1,"message":"159","line":23,"column":7,"nodeType":"132","messageId":"133","endLine":23,"endColumn":10},{"ruleId":"134","severity":1,"message":"160","line":24,"column":6,"nodeType":"136","endLine":24,"endColumn":8,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":66,"column":9,"nodeType":"164","endLine":71,"endColumn":11},{"ruleId":"130","severity":1,"message":"165","line":28,"column":23,"nodeType":"132","messageId":"133","endLine":28,"endColumn":34},{"ruleId":"134","severity":1,"message":"166","line":58,"column":6,"nodeType":"136","endLine":58,"endColumn":8,"suggestions":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'setIntervalVar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'intervalFunction' and 'randomId'. Either include them or remove the dependency array.","ArrayExpression",["170"],"no-useless-computed-key","Unnecessarily computed property [\"size\"] found.","Property","unnecessarilyComputedProperty",{"range":"171","text":"172"},"Unnecessarily computed property [\"id\"] found.",{"range":"173","text":"174"},"'definedColors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history' and 'roomid'. Either include them or remove the dependency array.",["175"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roomid'. Either include it or remove the dependency array.",["176"],["177"],"'getAnalytics' is defined but never used.","'getAuth' is defined but never used.","'config' is defined but never used.","'app' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["178"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'handleColor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},[5599,5607],"\"size\"",[7201,7207],"\"id\"",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [intervalFunction, randomId]",{"range":"191","text":"192"},"Update the dependencies array to be: [history, roomid]",{"range":"193","text":"194"},"Update the dependencies array to be: [roomid]",{"range":"195","text":"196"},{"range":"197","text":"196"},"Update the dependencies array to be: [user]",{"range":"198","text":"199"},"Update the dependencies array to be: [fetchData]",{"range":"200","text":"201"},[1362,1364],"[intervalFunction, randomId]",[1585,1587],"[history, roomid]",[1056,1058],"[roomid]",[1165,1167],[603,605],"[user]",[1562,1564],"[fetchData]"]